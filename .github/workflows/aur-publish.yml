name: Publish to AUR

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm base-devel git openssh

      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(grep "^pkgver=" pkg/arch/PKGBUILD | cut -d= -f2)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version is $VERSION"

      - name: Update PKGBUILD version
        run: |
          sed -i "s/^pkgver=.*/pkgver=$VERSION/" pkg/arch/PKGBUILD
          cat pkg/arch/PKGBUILD

      - name: Generate .SRCINFO
        run: |
          cd pkg/arch
          makepkg --printsrcinfo > .SRCINFO
          cat .SRCINFO

      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p /root/.ssh
          echo "$SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
          chmod 600 /root/.ssh/id_rsa
          ssh-keyscan -t rsa aur.archlinux.org >> /root/.ssh/known_hosts
          git config --global user.name "${{ secrets.AUR_USERNAME }}"
          git config --global user.email "${{ secrets.AUR_EMAIL }}"

      - name: Clone AUR repository
        run: |
          git clone ssh://aur@aur.archlinux.org/linchat.git aur-repo
          
      - name: Update AUR package
        run: |
          cp pkg/arch/PKGBUILD aur-repo/
          cp pkg/arch/.SRCINFO aur-repo/
          cp LICENSE aur-repo/
          
          cd aur-repo
          git add PKGBUILD .SRCINFO LICENSE
          git commit -m "Update to version $VERSION"
          git push